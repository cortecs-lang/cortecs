name: Checks run in merge queue

on:
  merge_group:

jobs:
  run-ci:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      # Make sure source has been formatted
      - run: find source/ -iname '*.h' -o -iname '*.c' -exec clang-format --dry-run --Werror {} \;
      - run: find test/ -iname '*.h' -o -iname '*.c' -exec clang-format --dry-run --Werror {} \;

      # Make sure it builds under both clang and gcc
      - run: CC=clang bazel build //...
      - run: CC=clang bazel run @hedron_compile_commands//:refresh_all # generates the compile_commands.json
      - run: find source/ -type f -iname '*.c' ! -iname '*.template.c' -exec clang-tidy --config-file ./source/.clang-tidy -p ./ {} \;
      - run: find test/ -type f -iname '*.c' -exec clang-tidy --config-file ./test/.clang-tidy -p ./ {} \;

      # Currently only running coverage for tracking. 
      # May eventually start failing CI if code isnt covered
      - run: CC=gcc bazel coverage --instrumentation_filter //source/... --combined_report=lcov //test/...
      - run: echo "COVERAGE_DAT=$(bazel info output_path)/_coverage/_coverage_report.dat" >> $GITHUB_ENV
      - uses: codecov/codecov-action@v5
        with:
          fail_ci_if_error: true
          files: ${{ env.COVERAGE_DAT }}
          token: ${{ secrets.CODECOV_TOKEN }}
          verbose: true
          # coverage gets uploaded from the trunk merge staging branch
          # override and say coverage is from main
          override_branch: main
          # TODO coverage isnt reported for the right commits
          # it uses the merge commit into the staging branch instead of the code change
